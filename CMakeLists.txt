# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(bench LANGUAGES CXX C)

# target
set(CMAKE_C_COMPILER "/usr/bin/clang")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
add_executable(bench "")
set_target_properties(bench PROPERTIES OUTPUT_NAME "bench")
set_target_properties(bench PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(bench libciphervault)
target_include_directories(bench PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_include_directories(bench PRIVATE
    /home/pablo/.xmake/packages/b/benchmark/1.7.0/41e335b0d4864392b8c21cd6ed5e875b/include
)
target_compile_options(bench PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(bench PRIVATE -W3)
    target_compile_options(bench PRIVATE -WX)
else()
    target_compile_options(bench PRIVATE -Wall)
    target_compile_options(bench PRIVATE -Werror)
endif()
set_target_properties(bench PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(bench PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(bench PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(bench PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(bench PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET bench PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(bench PRIVATE
    benchmark_main
    benchmark
    libciphervault
    fmt
    ssl
    crypto
    pthread
)
target_link_directories(bench PRIVATE
    /home/pablo/.xmake/packages/b/benchmark/1.7.0/41e335b0d4864392b8c21cd6ed5e875b/lib
    build/linux/x86_64/release
    /usr/lib
)
target_link_options(bench PRIVATE
    -m64
)
target_sources(bench PRIVATE
    bench/cipher/cipher_benchmarks.cpp
    bench/main.cpp
)

# target
set(CMAKE_C_COMPILER "/usr/bin/clang")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
add_executable(ciphervault "")
set_target_properties(ciphervault PROPERTIES OUTPUT_NAME "ciphervault")
set_target_properties(ciphervault PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(ciphervault libciphervault)
target_include_directories(ciphervault PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_include_directories(ciphervault PRIVATE
    /home/pablo/.xmake/packages/c/cxxopts/v3.0.0/533f1970a0884648838ce983784f4181/include
)
target_compile_options(ciphervault PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(ciphervault PRIVATE -W3)
    target_compile_options(ciphervault PRIVATE -WX)
else()
    target_compile_options(ciphervault PRIVATE -Wall)
    target_compile_options(ciphervault PRIVATE -Werror)
endif()
set_target_properties(ciphervault PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(ciphervault PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(ciphervault PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(ciphervault PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(ciphervault PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET ciphervault PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(ciphervault PRIVATE
    fmt
    ssl
    crypto
    libciphervault
)
target_link_directories(ciphervault PRIVATE
    /usr/lib
    build/linux/x86_64/release
)
target_link_options(ciphervault PRIVATE
    -m64
)
target_sources(ciphervault PRIVATE
    src/main.cpp
)

# target
set(CMAKE_C_COMPILER "/usr/bin/clang")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
add_library(libciphervault STATIC "")
set_target_properties(libciphervault PROPERTIES OUTPUT_NAME "libciphervault")
set_target_properties(libciphervault PROPERTIES ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
target_include_directories(libciphervault PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_include_directories(libciphervault PRIVATE
    /home/pablo/.xmake/packages/c/cxxopts/v3.0.0/533f1970a0884648838ce983784f4181/include
)
target_compile_options(libciphervault PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(libciphervault PRIVATE -W3)
    target_compile_options(libciphervault PRIVATE -WX)
else()
    target_compile_options(libciphervault PRIVATE -Wall)
    target_compile_options(libciphervault PRIVATE -Werror)
endif()
set_target_properties(libciphervault PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(libciphervault PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(libciphervault PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(libciphervault PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(libciphervault PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET libciphervault PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(libciphervault PRIVATE
    fmt
    ssl
    crypto
)
target_link_directories(libciphervault PRIVATE
    /usr/lib
)
target_link_options(libciphervault PRIVATE
    -m64
)
target_sources(libciphervault PRIVATE
    src/libciphervault/cert.cpp
)

# target
set(CMAKE_C_COMPILER "/usr/bin/clang")
set(CMAKE_CXX_COMPILER "/usr/bin/clang++")
add_executable(test "")
set_target_properties(test PROPERTIES OUTPUT_NAME "test")
set_target_properties(test PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/linux/x86_64/release")
add_dependencies(test libciphervault)
target_include_directories(test PRIVATE
    include
    /usr/local/include
    /usr/include
)
target_include_directories(test PRIVATE
    /home/pablo/.xmake/packages/g/gtest/1.12.1/20a632ab8cd449b696b952cd2c20ce18/include
)
target_compile_options(test PRIVATE
    $<$<COMPILE_LANGUAGE:C>:-m64>
    $<$<COMPILE_LANGUAGE:CXX>:-m64>
    $<$<COMPILE_LANGUAGE:C>:-DNDEBUG>
    $<$<COMPILE_LANGUAGE:CXX>:-DNDEBUG>
)
if(MSVC)
    target_compile_options(test PRIVATE -W3)
    target_compile_options(test PRIVATE -WX)
else()
    target_compile_options(test PRIVATE -Wall)
    target_compile_options(test PRIVATE -Werror)
endif()
set_target_properties(test PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(test PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(test PRIVATE $<$<CONFIG:Release>:-Ox -fp:fast>)
else()
    target_compile_options(test PRIVATE -O3)
endif()
if(MSVC)
else()
    target_compile_options(test PRIVATE -fvisibility=hidden)
endif()
if(MSVC)
    set_property(TARGET test PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_link_libraries(test PRIVATE
    gtest
    gtest_main
    gmock
    libciphervault
    fmt
    ssl
    crypto
    pthread
)
target_link_directories(test PRIVATE
    /home/pablo/.xmake/packages/g/gtest/1.12.1/20a632ab8cd449b696b952cd2c20ce18/lib
    build/linux/x86_64/release
    /usr/lib
)
target_link_options(test PRIVATE
    -m64
)
target_sources(test PRIVATE
    test/cert/cert_tests.cpp
    test/main.cpp
)

